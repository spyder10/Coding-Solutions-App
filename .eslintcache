[{"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\index.js":"1","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\App.js":"2","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\Striver.js":"3","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\Home.js":"4","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\StriverMainPage.js":"5","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\service\\firebase.js":"6","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\LoginAdmin.js":"7","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\context\\auth-context.js":"8","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\AdminDashboard.js":"9","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\PrivateRoute.js":"10","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\LoveBabbar.js":"11","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\AdminPages.js":"12","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminLoveBabbarPage.js":"13","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminStriverPage.js":"14","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminInterviewBitPage.js":"15"},{"size":412,"mtime":1638257425605,"results":"16","hashOfConfig":"17"},{"size":2936,"mtime":1638267518523,"results":"18","hashOfConfig":"17"},{"size":4635,"mtime":1638221121117,"results":"19","hashOfConfig":"17"},{"size":269,"mtime":1638220653703,"results":"20","hashOfConfig":"17"},{"size":1973,"mtime":1638384696137,"results":"21","hashOfConfig":"17"},{"size":651,"mtime":1638273570413,"results":"22","hashOfConfig":"17"},{"size":3716,"mtime":1638266389880,"results":"23","hashOfConfig":"17"},{"size":1950,"mtime":1638266051766,"results":"24","hashOfConfig":"17"},{"size":4888,"mtime":1638273937039,"results":"25","hashOfConfig":"17"},{"size":562,"mtime":1638262347327,"results":"26","hashOfConfig":"17"},{"size":118,"mtime":1638263886754,"results":"27","hashOfConfig":"17"},{"size":611,"mtime":1638344845744,"results":"28","hashOfConfig":"17"},{"size":132,"mtime":1638274181102,"results":"29","hashOfConfig":"17"},{"size":11607,"mtime":1638387064679,"results":"30","hashOfConfig":"17"},{"size":136,"mtime":1638344802159,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"umgwnt",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\index.js",[],["68","69"],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\App.js",["70","71","72","73","74"],"import { Navbar, Nav, Container, Button } from \"react-bootstrap\";\nimport { Switch, Route, NavLink, useHistory, Link } from \"react-router-dom\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Striver from \"./Striver\";\nimport Home from \"./Home\";\nimport StriverMainPage from \"./StriverMainPage\";\nimport LoginAdmin from \"./LoginAdmin\";\nimport AdminDashboard from \"./AdminDashboard\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport LoveBabbar from \"./LoveBabbar\";\nimport { fb } from \"../service/firebase\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  // useEffect(() => {\n  //   const unsubsribe = fb.auth.onAuthStateChanged((user) => {\n  //     if (user) {\n  //       setAuthUser(user);\n  //     } else {\n  //       setAuthUser(null);\n  //     }\n  //   });\n  //   return unsubsribe;\n  // }, [])\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Coding Solutions</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavLink className=\"link-dark mt-2 text-decoration-none\" to=\"/\">\n                Home\n              </NavLink>\n\n              <NavLink\n                className=\"link-dark mt-2 text-decoration-none mx-3\"\n                to=\"/striver\"\n              >\n                Striver Sheet\n              </NavLink>\n              <NavLink\n                className=\"link-dark mt-2 text-decoration-none mx-3\"\n                to=\"/loveBabbar\"\n              >\n                Love Babbar Sheet\n              </NavLink>\n              <NavLink\n                className=\"link-dark mt-2 text-decoration-none mx-3\"\n                to=\"/adminDashboard\"\n              >\n                Admin Dashboard\n              </NavLink>\n            </Nav>\n            <Nav>\n              <Link to=\"/login\">\n                <Button>Login as Admin</Button>\n              </Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home></Home>\n        </Route>\n        <Route path=\"/login\">\n          {\" \"}\n          <LoginAdmin></LoginAdmin>{\" \"}\n        </Route>\n        <PrivateRoute\n          exact\n          path=\"/adminDashboard\"\n          component={AdminDashboard}\n        ></PrivateRoute>\n        <PrivateRoute\n          path=\"/adminDashBoard/:tableName\"\n          component={AdminDashboard}\n        ></PrivateRoute>\n        <Route exact path=\"/loveBabbar\">\n          {\" \"}\n          <LoveBabbar></LoveBabbar>{\" \"}\n        </Route>\n        <Route exact path=\"/striver\">\n          <Striver></Striver>\n        </Route>\n        <Route path=\"/striver/:dayValue\">\n          <Striver></Striver>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\Striver.js",["75","76","77"],"import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport StriverMainPage from \"./StriverMainPage\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction Striver(props) {\r\n  const params = useParams();\r\n  console.log(params);\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  let leftList = [];\r\n\r\n  for (let i = 1; i <= 30; i++) {\r\n    leftList.push(\"Day \" + i);\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        {leftList.map((text, index) => (\r\n          <Link to={`/striver/day${index + 1}`}>\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                <CalendarTodayIcon></CalendarTodayIcon>\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        className=\"bg-light\"\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"text-dark\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap component=\"div\" className=\"text-dark\">\r\n            Striver Sheet\r\n          </Typography>\r\n          <NavLink className=\"link-dark mx-3 text-decoration-none\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", sm: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <StriverMainPage\r\n          dayValue={\r\n            params.hasOwnProperty(\"dayValue\") ? params.dayValue : \"day1\"\r\n          }\r\n        ></StriverMainPage>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nStriver.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default Striver;\r\n","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\Home.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\StriverMainPage.js",["78"],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\service\\firebase.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\LoginAdmin.js",["79"],"import { Button, Card } from \"react-bootstrap\";\r\nimport styles from \"../styles/Login.module.css\";\r\nimport { useState, useReducer, useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nfunction Login(props) {\r\n  const ctx = useContext(AuthContext);\r\n  const [errorContent, setErrorContent] = useState(\"\");\r\n  const [isFormValid, setFormValid] = useState(false);\r\n\r\n  const emailStateReducer = (state, action) => {\r\n    if (action?.type === \"USER_INPUT\") {\r\n      return {\r\n        val: action.val,\r\n        isvalid: action.val.includes(\"@\"),\r\n        classes: action.val.includes(\"@\")\r\n          ? styles.control\r\n          : styles.control + \" \" + styles.invalid,\r\n      };\r\n    }\r\n    return { val: \"\", isvalid: false, classes: styles.control };\r\n  };\r\n  const passwordStateReducer = (state, action) => {\r\n    if (action?.type === \"USER_INPUT\") {\r\n      return {\r\n        val: action.val,\r\n        isvalid: action.val.trim().length > 6,\r\n        classes:\r\n          action.val.trim().length > 6\r\n            ? styles.control\r\n            : styles.control + \" \" + styles.invalid,\r\n      };\r\n    }\r\n    return { val: \"\", isvalid: false, classes: styles.control };\r\n  };\r\n  const [emailState, dispatchEmail] = useReducer(emailStateReducer, {\r\n    // Email State Reducer\r\n    val: \"\",\r\n    isvalid: null,\r\n    classes: styles.control,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordStateReducer, {\r\n    // Password State Reducer\r\n    val: \"\",\r\n    isvalid: null,\r\n    classes: styles.control,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormValid(emailState.isvalid && passwordState.isvalid);\r\n  }, [emailState, passwordState]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    // setEnteredEmail(event.target.value);                          // Whenever email is changing on every keystroke, we are setting the whole email state with its validlity by useReducer\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    setFormValid(event.target.value.includes(\"@\") && passwordState.isvalid);\r\n  };\r\n  const passwordChangeHandler = (event) => {\r\n    // setEnteredPassword(event.target.value);\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    setFormValid(emailState.isvalid && event.target.value.trim().length > 6);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    const userDetails = {\r\n      email: emailState.val,\r\n      password: passwordState.val,\r\n    };\r\n    event.preventDefault();\r\n\r\n    ctx.onLogIn(userDetails);\r\n    dispatchEmail();\r\n    dispatchPassword();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ctx.serverError) {\r\n      console.log(ctx.serverError);\r\n    }\r\n  }, [ctx.serverError]);\r\n  return (\r\n    <Card className={styles.login}>\r\n      <div className=\"mx-auto\">\r\n        <h2>Admin Login</h2>\r\n      </div>\r\n      <form onSubmit={formSubmitHandler}>\r\n        <div className={emailState.classes}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            value={emailState.val}\r\n            onChange={emailChangeHandler}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className={passwordState.classes}>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={passwordState.val}\r\n            onChange={passwordChangeHandler}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className={styles.actions}>\r\n          <Button\r\n            type=\"submit\"\r\n            className={styles.action}\r\n            disabled={!isFormValid}\r\n          >\r\n            Log In\r\n          </Button>\r\n        </div>\r\n\r\n        {errorContent}\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\nexport default Login;\r\n","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\context\\auth-context.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\AdminDashboard.js",["80","81","82","83","84"],"import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport StriverMainPage from \"./StriverMainPage\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AdminPages from \"./AdminPages\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction AdminDashboard(props) {\r\n  const ctx = useContext(AuthContext);\r\n  const params = useParams();\r\n  console.log(params);\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        {[\"Striver Sheet\", \"Love Babbar Sheet\", \"Interview Bit\"].map(\r\n          (text, index) => (\r\n            <Link to={`/adminDashboard/${index + 1}`}>\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  <CalendarTodayIcon></CalendarTodayIcon>\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            </Link>\r\n          )\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        className=\"bg-light\"\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n          ml: { sm: `${drawerWidth}px` },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"text-dark\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap component=\"div\" className=\"text-dark\">\r\n            Admin Dashboard\r\n          </Typography>\r\n          <NavLink className=\"link-dark mx-3 text-decoration-none\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Button>Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", sm: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <AdminPages\r\n          tableName={\r\n            params.hasOwnProperty(\"tableName\") ? params.tableName : \"1\"\r\n          }\r\n        ></AdminPages>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nAdminDashboard.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default AdminDashboard;\r\n","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\PrivateRoute.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\LoveBabbar.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\AdminPages.js",["85"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport AdminStriverPage from \"./adminPages/AdminStriverPage\";\r\nimport AdminLoveBabbarPage from \"./adminPages/AdminLoveBabbarPage\";\r\nimport AdminInterviewBitPage from \"./adminPages/AdminInterviewBitPage\";\r\n\r\nexport default function AdminPages(props) {\r\n  return (\r\n    <>\r\n      {props.tableName === \"1\" && <AdminStriverPage></AdminStriverPage>}\r\n      {props.tableName === \"2\" && <AdminLoveBabbarPage></AdminLoveBabbarPage>}\r\n      {props.tableName === \"3\" && (\r\n        <AdminInterviewBitPage></AdminInterviewBitPage>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminLoveBabbarPage.js",[],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminStriverPage.js",["86","87","88","89","90","91"],"C:\\Projects\\React Projects\\CodingSolutions\\Coding Solutions\\src\\components\\adminPages\\AdminInterviewBitPage.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":34,"nodeType":"98","messageId":"99","endLine":2,"endColumn":44},{"ruleId":"96","severity":1,"message":"100","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":23},{"ruleId":"96","severity":1,"message":"102","line":13,"column":10,"nodeType":"98","messageId":"99","endLine":13,"endColumn":12},{"ruleId":"96","severity":1,"message":"103","line":16,"column":9,"nodeType":"98","messageId":"99","endLine":16,"endColumn":12},{"ruleId":"96","severity":1,"message":"104","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":17},{"ruleId":"96","severity":1,"message":"105","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":16},{"ruleId":"96","severity":1,"message":"106","line":21,"column":10,"nodeType":"98","messageId":"99","endLine":21,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":19},{"ruleId":"96","severity":1,"message":"108","line":9,"column":24,"nodeType":"98","messageId":"99","endLine":9,"endColumn":39},{"ruleId":"96","severity":1,"message":"104","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":17},{"ruleId":"96","severity":1,"message":"105","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":23},{"ruleId":"96","severity":1,"message":"106","line":21,"column":10,"nodeType":"98","messageId":"99","endLine":21,"endColumn":14},{"ruleId":"96","severity":1,"message":"103","line":32,"column":9,"nodeType":"98","messageId":"99","endLine":32,"endColumn":12},{"ruleId":"96","severity":1,"message":"109","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"110","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":25},{"ruleId":"96","severity":1,"message":"111","line":25,"column":9,"nodeType":"98","messageId":"99","endLine":25,"endColumn":21},{"ruleId":"96","severity":1,"message":"112","line":26,"column":9,"nodeType":"98","messageId":"99","endLine":26,"endColumn":17},{"ruleId":"96","severity":1,"message":"113","line":27,"column":9,"nodeType":"98","messageId":"99","endLine":27,"endColumn":20},{"ruleId":"96","severity":1,"message":"114","line":121,"column":9,"nodeType":"98","messageId":"99","endLine":121,"endColumn":29},{"ruleId":"96","severity":1,"message":"115","line":124,"column":9,"nodeType":"98","messageId":"99","endLine":124,"endColumn":30},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'StriverMainPage' is defined but never used.","'fb' is defined but never used.","'ctx' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Card' is defined but never used.","'useParams' is defined but never used.","'setErrorContent' is assigned a value but never used.","'useState' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'tempProbData' is assigned a value but never used.","'problems' is assigned a value but never used.","'problemData' is assigned a value but never used.","'deleteCommentHandler' is assigned a value but never used.","'deleteSolutionHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]